require "fileutils"
include FileUtils

%w[unit functional integration performance].each do |type|
  desc "run #{type} tests"
  task type do
    Dir.glob "./test/#{type}/*_test.rb" do |f|
      require f
    end
  end
end

desc "run all tests"
task :test do
  Dir.glob "./test/{unit,functional}/*_test.rb" do |f|
    require f
  end
end

desc "test coverage"
task :coverage do
  $coverage = true
  Dir.glob "./test/{unit,functional}/*_test.rb" do |f|
    require f
  end
end

desc "compile css and js"
task :asset do
  require "./script/asset"
  Asset.new(true).compile
end

def stat_files fs
  c = 0
  fc = 0
  total_size = 0.0
  fs.each do |f|
    fc += 1
    data = File.binread f
    c += data.count "\n"
    total_size += data.bytesize
  end
  puts "files: #{fc}"
  puts "lines: #{c}"
  puts "chars per line: %.2f" % (total_size / c)
end

def require_env 
  ENV['RACK_ENV'] = 'rake'
  require "./config/boot"
end

desc "project statistics"
task :stat do
  puts "All:"
  stat_files Dir.glob '**/*.{rb,sass,slim,coffee}'

  puts "\nRuby:"
  stat_files Dir.glob('**/*.rb') - Dir.glob('test/**/*.rb')
  
  puts "\nObjectSpace: (rough)"
  GC.start
  require_env
  require "objspace"
  h = {}
  ObjectSpace.count_objects_size(h)
  h.each do |k, v|
    print k, ': ', (v / 1024), "k\n"
  end
end

desc "check project for common errors"
task :audit do
  require_env
  require "./script/audit_helpers"
end

desc "show all routes"
task :routes do
  require_env
  blue = -> s { "\e[36m#{s}\e[0m" }
  grey = -> s { "\e[37m#{s}\e[0m" }
  Sinatra::Application.routes.each do |verb, routes|
    puts blue[verb]
    puts routes.map{|(pattern, captures)| "#{pattern.source.ljust 45} #{grey[captures.join ', ']}"}
    puts
  end
end
